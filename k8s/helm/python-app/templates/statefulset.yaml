apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "python-app.fullname" . }}
  labels:
    {{- include "python-app.labels" . | nindent 4 }}
spec:
  podManagementPolicy: {{ .Values.podManagementPolicy }}
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "python-app.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "python-app.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "python-app.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
        - name: init-dir
          emptyDir:
        - name: redis-config
          configMap:
            name: redis-config
      initContainers:
        - name: fetch-ipinfo
          image: busybox:1.28
          command:
            - wget
            - "-O"
            - "/init-dir/info.json"
            - http://ifconfig.co/json
          volumeMounts:
            - name: init-dir
              mountPath: "/init-dir"
        - name: find-timezone
          image: busybox:1.28
          command:
            - sh
            - -c
            - "awk '/time_zone/{ gsub(/[,\"]/, \"\", $2); print $2 }' /init-dir/info.json > /init-dir/timezone"
          volumeMounts:
            - name: init-dir
              mountPath: "/init-dir"
        - name: delete-ipinfo
          image: busybox:1.28
          command:
            - rm
            - "/init-dir/info.json"
          volumeMounts:
            - name: init-dir
              mountPath: "/init-dir"
      containers:
        - name: {{ .Chart.Name }}
          volumeMounts:
            - name: init-dir
              mountPath: "/init-dir"
              readOnly: true
            - name: redis-config
              mountPath: "/config"
              readOnly: true
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          resources:
            limits:
              memory: "{{ .Values.resources.limits.memory }}"
              cpu: "{{ .Values.resources.limits.cpu }}"
            requests:
              memory: "{{ .Values.resources.requests.memory }}"
              cpu: "{{ .Values.resources.requests.cpu }}"
          env:
            - name: MY_PASS
              valueFrom:
                secretKeyRef:
                  name: sus-secret
                  key: sus-value
            {{- include "python-app.redis-env-vars" . | nindent 12 }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /status
              port: http
          readinessProbe:
            httpGet:
              path: /status
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
